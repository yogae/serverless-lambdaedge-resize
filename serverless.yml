service: serverless-lambdaedge-python

provider:
  name: aws
  runtime: python3.7
  stage: ${opt:stage, "dev"}
  versionFunctions: true
  # memorySize: 128
  role: LambdaEdgeRole

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
    fileName: requirements.txt

functions:
  hello:
    handler: handler.hello

resources:
  Resources:
    LambdaEdgeRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - edgelambda.amazonaws.com
                  - lambda.amazonaws.com
              Action:
                - sts:AssumeRole
        Policies:
          - PolicyName: LambdaEdgeExecutionRole
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - s3:*
                  Resource: "*"
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource: "arn:aws:logs:*:*:*"
